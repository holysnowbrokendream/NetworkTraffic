"""
Django settings for NTBack project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

### 项目根目录设置
BASE_DIR = Path(__file__).resolve().parent.parent

### Django秘密钥匙，用于一切加密和解密数据用途，请勿泄露
SECRET_KEY = 'django-insecure-*ub(od23x)5k1++k610fbnva*juhkd8x%6n&m=ib_1%7pzh$18'
# 该钥匙可以在此直接更改，例如：
# SECRET_KEY = 'your-new-secret-key'
#
# import os
# SECRET_KEY = os.getenv('SECRET_KEY')
#
# import os
# import secrets
# SECRET_KEY = secrets.token_hex(32)

### 模式设置，警告！请勿在生产模式下赋值DEBUG为True
DEBUG = True

### 允许的主机列表，请勿在生产模式下赋值为空
ALLOWED_HOSTS = []

### 安装的应用程序列表，后续新建应用都需要在此添加
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apps.Sampleapp.apps.SampleappConfig',
]

### 中间件列表
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

### 根URL配置
ROOT_URLCONF = 'NTBack.urls'

### 模板配置
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

### WSGI应用程序配置
WSGI_APPLICATION = 'NTBack.wsgi.application'

### 数据库配置
# 项目计划使用MYSQL数据库，若要进行更改，请参考：
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
# 例如：
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'your-database-name',
#         'USER': 'your-database-user',
#         'PASSWORD': 'your-database-password',
#         'HOST': 'your-database-host',
#         'PORT': 'your-database-port',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'NetworkTraffic',
        'USER': 'root',
        'PASSWORD': 'hxh13618581590',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}


### 密码验证配置，用于检测用户设置的密码是否达标：
# 若要进行更改，请参考：
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        # 检查密码与用户的某些属性之间的相似性
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        # 验证密码是否达到最小长度要求
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        # 检查密码是否在常用密码列表中
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        # 验证密码是否不完全由数字组成
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

### 国际化配置，用于支持多语言：
# 若要进行更改，请参考：
# https://docs.djangoproject.com/en/5.2/topics/i18n/
# 例如：
# LANGUAGE_CODE = 'zh-hans'
# TIME_ZONE = 'Asia/Shanghai'
# USE_I18N = True
# USE_TZ = True
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


### 静态文件配置，用于存储CSS、JavaScript和图像等静态文件：
STATIC_URL = 'static/'
# 开发时静态文件搜索目录
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

### 媒体文件配置，用于存储用户上传的文件：
MEDIA_URL = '/media/'   
# 开发时上传文件存储路径
MEDIA_ROOT = [ 
    BASE_DIR / 'media' 
] 

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
